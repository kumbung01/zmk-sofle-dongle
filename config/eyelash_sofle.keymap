#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        lang {
            bindings = <&kp RALT>;
            key-positions = <34 35>;
            layers = <3 0>;
            timeout-ms = <90>;
        };

        b_key {
            bindings = <&kp B>;
            key-positions = <35 36>;
            layers = <3 0>;
            timeout-ms = <90>;
        };
    };

    macros {
        arrow: arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp GT>;
            label = "ARROW";
        };

        arrow2: arrow2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT>;
            label = "ARROW2";
        };

        layer_shift: layer_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LSHFT &mo 2>;
            label = "LAYER_SHIFT";
        };

        lm: lm {
            compatible = "zmk,behavior-macro-two-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <2>;
            bindings
                = <&macro_param_1to1>
                , <&macro_press &mo MACRO_PLACEHOLDER>
                , <&macro_param_2to1>
                , <&macro_press &kp MACRO_PLACEHOLDER>
                , <&macro_pause_for_release>
                , <&macro_param_2to1>
                , <&macro_release &kp MACRO_PLACEHOLDER>
                , <&macro_param_1to1>
                , <&macro_release &mo MACRO_PLACEHOLDER>
                ;
        };

        rk: rk {
            compatible = "zmk,behavior-macro-two-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <2>;
            bindings
                = <&macro_param_1to1>
                , <&macro_release &kp MACRO_PLACEHOLDER>
                , <&macro_param_2to1>
                , <&macro_press &kp MACRO_PLACEHOLDER>
                , <&macro_pause_for_release>
                , <&macro_param_2to1>
                , <&macro_release &kp MACRO_PLACEHOLDER>
                ;
        }
    };

    behaviors {
        skq: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_KEY_QUICK_RELEASE";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <1000>;
            quick-release;
        };

        caps_word_mod: caps_word_mod {
            compatible = "zmk,behavior-caps-word";
            label = "CAPS_WORD_MOD";
            #binding-cells = <0>;
            continue-list = <A B C D E F G H I J K L M N O P Q R S T U V W X Y Z NUMBER_1 NUMBER_2 NUMBER_3 NUMBER_4 NUMBER_5 NUMBER_6 NUMBER_7 NUMBER_8 NUMBER_9 NUMBER_0 UNDERSCORE MINUS>;
        };

        G_ESC: G_ESC {
            compatible = "zmk,behavior-hold-tap";
            label = "G_ESC";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <90>;
            hold-trigger-key-positions = <0>;
        };

        SH_CAPS: SH_CAPS {
            compatible = "zmk,behavior-tap-dance";
            label = "SH_CAPS";
            #binding-cells = <0>;
            bindings = <&skq LSHFT>, <&caps_word_mod>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&kp ESC        &kp N1    &kp N2  &kp N3          &kp N4     &kp N5       &tog 3          &kp N6  &kp N7    &kp N8     &kp N9   &kp N0    &kp BACKSLASH
&mt LSHFT TAB  &kp Q     &kp W   &kp E           &kp R      &kp T        &tog 5          &kp Y   &kp U     &kp I      &kp O    &kp P     &kp BACKSPACE
&mo 1          &kp A     &kp S   &kp D           &kp F      &kp G        &kp LEFT_ARROW  &kp H   &kp J     &kp K      &kp L    &kp SEMI  &kp APOS
&lm 2 LSHIFT   &kp Z     &kp X   &kp C           &kp V      &kp B        &none           &kp N   &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp LCTRL
&kp LC(F11)    &kp LALT  &mo 5   &kp UNDERSCORE  &kp SPACE  &kp LCTRL    &kp ENTER       &mo 5   &SH_CAPS  &kp ENTER  &mo 4    &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = " BASE";
        };

        SYM1 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans           &trans          &trans                &trans                 &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp CARET        &kp AMPERSAND   &kp ASTRK             &kp PIPE               &arrow     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp EXCLAMATION  &kp PLUS        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp TILDE        &kp MINUS       &kp LESS_THAN         &kp GREATER_THAN       &kp FSLH   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans           &caps_word_mod  &trans                &trans                 &trans
            >;

            label = "SYM1";
        };

        SYM2 {
            bindings = <
&trans  &trans      &trans  &trans  &trans  &trans    &trans  &trans      &trans       &trans         &trans           &trans        &trans
&trans  &trans      &trans  &trans  &trans  &trans    &trans  &trans      &kp PERCENT  &trans         &trans           &arrow2       &trans
&trans  &trans      &trans  &trans  &trans  &trans    &trans  &kp DOLLAR  &kp HASH     &kp LBKT       &kp RBKT         &kp COLON     &kp DOUBLE_QUOTES
&trans  &rk LSHIFT DELETE  &trans  &trans  &trans  &trans    &trans  &rk LSHFIT GRAVE   &kp AT_SIGN  &kp LBRC       &kp RIGHT_BRACE  &kp QUESTION  &kp FSLH
&trans  &trans      &trans  &trans  &trans  &trans    &trans  &trans      &trans       &kp LS(ENTER)  &trans           &trans
            >;

            label = "SYM2";
        };

        GAME {
            bindings = <
&G_ESC GRAVE ESCAPE  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp TAB              &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp A                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp LSHFT            &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans               &trans  &trans  &kp C   &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "GAME";
        };

        NUM {
            bindings = <
&trans  &trans        &trans      &trans         &trans        &trans           &trans  &trans         &trans        &trans        &trans        &trans        &trans
&trans  &kp LS(EXCL)  &kp LS(AT)  &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)    &trans  &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)  &kp LS(LPAR)  &kp LS(RPAR)  &trans
&trans  &kp N1        &kp N2      &kp N3         &kp N4        &kp N5           &trans  &kp N6         &kp N7        &kp N8        &kp N9        &kp N0        &trans
&trans  &trans        &trans      &trans         &trans        &trans           &trans  &trans         &trans        &trans        &trans        &trans        &trans
&trans  &trans        &trans      &trans         &trans        &trans           &trans  &trans         &trans        &trans        &trans        &trans
            >;

            label = "NUM";
        };

        FUNC {
            bindings = <
&kp ESCAPE       &kp F1  &kp F2     &kp F3        &kp F4     &kp F5      &kp ESCAPE  &kp F6     &kp F7            &kp F8    &kp F9             &kp F10          &kp F11
&none            &none   &mkp LCLK  &mkp MCLK     &mkp RCLK  &mkp MB4    &trans      &kp PG_UP  &kp HOME          &kp UP    &kp END            &kp C_VOLUME_UP  &kp F12
&trans           &none   &trans     &trans        &trans     &mkp MB5    &trans      &kp PG_DN  &kp LEFT          &kp DOWN  &kp RIGHT          &kp C_VOL_DN     &none
&kp PRINTSCREEN  &none   &none      &none         &none      &none       &trans      &none      &kp LEFT_BRACKET  &none     &kp RIGHT_BRACKET  &trans           &trans
&trans           &trans  &trans     &kp LEFT_GUI  &trans     &trans      &trans      &trans     &kp SPACE         &trans    &trans             &trans
            >;

            display-name = "FUNC";
            sensor-bindings = <&scroll_encoder>;
        };
    };
};
